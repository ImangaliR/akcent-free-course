// components/CourseNavigation/CourseNavigation.jsx
import { CheckCircle, ChevronLeft, ChevronRight, Play } from "lucide-react";
import { useCourse } from "../context/CourseContext";

export const CourseNavigation = ({ currentBlockCompleted = false }) => {
  const {
    currentBlockIndex,
    courseManifest,
    goToNextBlock,
    goToPreviousBlock,
    canGoNext,
    canGoPrevious,
    completeBlock,
    getCurrentBlock,
    progress,
  } = useCourse();

  const currentBlock = getCurrentBlock();

  const handleNext = async () => {
    // –ï—Å–ª–∏ —Ç–µ–∫—É—â–∏–π –±–ª–æ–∫ –∑–∞–≤–µ—Ä—à–µ–Ω, –æ—Ç–º–µ—á–∞–µ–º –µ–≥–æ –∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º –¥–∞–ª—å—à–µ
    if (currentBlockCompleted && currentBlock) {
      await completeBlock(currentBlock.ref);
    }
    await goToNextBlock();
  };

  const getBlockTypeLabel = (ref) => {
    if (ref.includes("video")) return "–í–∏–¥–µ–æ";
    if (ref.includes("task")) return "–ó–∞–¥–∞–Ω–∏–µ";
    if (ref.includes("audio")) return "–ê—É–¥–∏—Ä–æ–≤–∞–Ω–∏–µ";
    if (ref.includes("inf-")) return "–ò–Ω—Ñ–æ–∫–∞—Ä—Ç–æ—á–∫–∞";
    return "–ë–ª–æ–∫";
  };

  const getCurrentBlockInfo = () => {
    if (!currentBlock) return null;

    const blockNumber = currentBlockIndex + 1;
    const totalBlocks = courseManifest?.sequence?.length || 0;
    const blockType = getBlockTypeLabel(currentBlock.ref);

    return { blockNumber, totalBlocks, blockType };
  };

  const blockInfo = getCurrentBlockInfo();

  if (!courseManifest || !currentBlock) {
    return null;
  }

  return (
    <div className="bg-white rounded-xl shadow-lg border-t">
      {/* –ü—Ä–æ–≥—Ä–µ—Å—Å –±–∞—Ä */}
      <div className="px-6 py-3 border-b bg-gray-50">
        <div className="flex items-center justify-between text-sm text-gray-600 mb-2">
          <span>
            {blockInfo?.blockType} {blockInfo?.blockNumber} –∏–∑{" "}
            {blockInfo?.totalBlocks}
          </span>
          <span>{progress}% –∑–∞–≤–µ—Ä—à–µ–Ω–æ</span>
        </div>
        <div className="w-full bg-gray-200 rounded-full h-2">
          <div
            className="bg-blue-600 h-2 rounded-full transition-all duration-300"
            style={{ width: `${progress}%` }}
          />
        </div>
      </div>

      {/* –ö–Ω–æ–ø–∫–∏ –Ω–∞–≤–∏–≥–∞—Ü–∏–∏ */}
      <div className="p-6">
        <div className="flex items-center justify-between">
          {/* –ö–Ω–æ–ø–∫–∞ "–ù–∞–∑–∞–¥" */}
          <button
            onClick={goToPreviousBlock}
            disabled={!canGoPrevious()}
            className={`
              flex items-center gap-2 px-4 py-2 rounded-lg font-medium transition-colors
              ${
                canGoPrevious()
                  ? "text-gray-700 hover:bg-gray-100 border border-gray-300"
                  : "text-gray-400 cursor-not-allowed border border-gray-200"
              }
            `}
          >
            <ChevronLeft size={20} />
            –ù–∞–∑–∞–¥
          </button>

          {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º –±–ª–æ–∫–µ */}
          <div className="text-center">
            <div className="text-sm text-gray-500 mb-1">–¢–µ–∫—É—â–∏–π –±–ª–æ–∫</div>
            <div className="font-medium text-gray-800">
              {blockInfo?.blockType} {blockInfo?.blockNumber}
            </div>
          </div>

          {/* –ö–Ω–æ–ø–∫–∞ "–î–∞–ª–µ–µ" */}
          {canGoNext() ? (
            <button
              onClick={handleNext}
              disabled={!currentBlockCompleted}
              className={`
                flex items-center gap-2 px-6 py-2 rounded-lg font-medium transition-colors
                ${
                  currentBlockCompleted
                    ? "bg-blue-600 text-white hover:bg-blue-700"
                    : "bg-gray-300 text-gray-500 cursor-not-allowed"
                }
              `}
            >
              {currentBlockCompleted ? (
                <>
                  –î–∞–ª–µ–µ
                  <ChevronRight size={20} />
                </>
              ) : (
                <>
                  <Play size={16} />
                  –ó–∞–≤–µ—Ä—à–∏—Ç–µ –±–ª–æ–∫
                </>
              )}
            </button>
          ) : (
            <div className="flex items-center gap-2 px-6 py-2 rounded-lg bg-green-100 text-green-800 font-medium">
              <CheckCircle size={20} />
              –ö—É—Ä—Å –∑–∞–≤–µ—Ä—à–µ–Ω!
            </div>
          )}
        </div>

        {/* –ü–æ–¥—Å–∫–∞–∑–∫–∞ */}
        {!currentBlockCompleted && (
          <div className="mt-4 p-3 bg-yellow-50 rounded-lg border border-yellow-200">
            <p className="text-sm text-yellow-800">
              üí° –ó–∞–≤–µ—Ä—à–∏—Ç–µ –ø—Ä–æ—Å–º–æ—Ç—Ä —Ç–µ–∫—É—â–µ–≥–æ –±–ª–æ–∫–∞, —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ —Å–ª–µ–¥—É—é—â–µ–º—É
            </p>
          </div>
        )}
      </div>
    </div>
  );
};
